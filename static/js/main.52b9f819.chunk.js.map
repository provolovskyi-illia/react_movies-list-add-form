{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","error","handlerValue","event","target","value","name","setState","handlerSubmit","preventDefault","trim","length","props","onAdd","this","onSubmit","type","placeholder","onChange","rows","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52b9f819.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends React.Component {\n  state = {\n    movie: {\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      description: '',\n    },\n    error: false,\n  };\n\n  handlerValue = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(state => ({\n      movie: {\n        ...state.movie,\n        [name]: value,\n      },\n    }));\n  }\n\n  handlerSubmit = (event) => {\n    event.preventDefault();\n    const { movie } = this.state;\n/* eslint-disable */\n    for (const key in movie) {\n      if (movie[key].trim().length === 0) {\n        return this.setState({\n          error: true,\n        });\n      }\n    }\n\n    this.props.onAdd(movie);\n\n    for (const key in movie) {\n      this.setState(state => ({\n        movie: {\n          ...state.movie,\n          [key]: '',\n        },\n      }));\n    }\n/* eslint-disable */\n    return this.setState({\n      error: false,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      description,\n    } = this.state.movie;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handlerSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"title\"\n          value={title}\n          onChange={this.handlerValue}\n        />\n\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"image url\"\n          value={imgUrl}\n          onChange={this.handlerValue}\n        />\n\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"IMDb url\"\n          value={imdbUrl}\n          onChange={this.handlerValue}\n        />\n\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"IMDb id\"\n          value={imdbId}\n          onChange={this.handlerValue}\n        />\n\n        <textarea\n          rows=\"4\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"description\"\n          value={description}\n          onChange={this.handlerValue}\n        />\n        {this.state.error && (\n          <div className=\"error\">\n            –êll fields must be filled\n          </div>\n        )}\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}